1. Intitialize string variable [X]
2. Get user input for Roman Numeral Calculator [X]
3. Exception error for bad inputs
4. Convert string letters to number (ex: V = 5) [X]
5. Solve algebraic expression in PEMDAS Order [X]
6. Covert Final Number Back into Roman Numeral [X]
7. Display output to user [X]


Errors to add in:
Zero [X]
Float Number [X]
Too Big Of Number [X]
No numerals to equate
Back to Back operators


Tree primary structure
number greater than 3,999 should return "You're going to need a bigger calculator"
if fail to parse, print "I don't know how to read this"
Should translate to integer from roman numeral if there is no operator
PEMDAS matters
Two grouping - Parenthesis and brackets




9+8

    0   - <- 9+8
9   +   8

9*8/6+/(5-9)

    0   - <- 9*8/6+5-9
9*8/6   -   (5-9)

